geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_continuous(
name = "Composite",
breaks = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
limits = c(0, 9),  # Limite de l'échelle de couleurs de 0 à 9
labels = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
low = 0,
high = 9,
rescaler = function(x, ...) {pmax(pmin(x, scale_limits[2]), scale_limits[1])}  # Forcer les valeurs à respecter les limites
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Afficher le graphique
print(compositePlotInterv)
compositeShape_extended <- rbind(compositeShape, data.frame(Area = 9))
class(compositeShape)
new_data <- data.frame(Area = 9)  # Créer les nouvelles données avec une valeur artificielle
new_data_sf <- st_sf(new_data, geometry = NULL, crs = st_crs(compositeShape))  # Définir le même CRS que compositeShape
st_crs(compositeShape)
st_sf
?st_sf
compositeShape$name
which(compositeShape$name=="San Marin")
compositeShape$Area[compositeShape$country=="San Marino"]=9;
#Plotting the maps
compositePlot <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.factor(Area))) +
scale_fill_manual(values = colorRampPalette(brewer.pal(9, "Purples"))(length(all_values)),
breaks = all_values) +
labs(fill = "Overall aggregated risk") + theme_minimal()
compositePlot
#Plotting the maps
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_manual(values = colorRampPalette(brewer.pal(9, "Purples"))(length(all_values)),
breaks = all_values) +
labs(fill = "Overall aggregated risk") + theme_minimal()
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape_extended, aes(fill = as.numeric(Area))) +
scale_fill_continuous(
name = "Composite",
breaks = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
limits = c(0, 9),  # Limite de l'échelle de couleurs de 0 à 9
labels = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
low = 0,
high = 9,
rescaler = function(x, ...) {pmax(pmin(x, scale_limits[2]), scale_limits[1])}  # Forcer les valeurs à respecter les limites
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
myPalette <- colorRampPalette(brewer.pal(9, "Purples"))
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_continuous(
name = "Composite",
breaks = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
limits = c(0, 9),  # Limite de l'échelle de couleurs de 0 à 9
labels = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
low = 0,
high = 9,
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Afficher le graphique
print(compositePlotInterv)
max(compositeShape$Area)
max(compositeShape$Area,na.rm = T)
compositeShape$country=="San Marino"
compositeShape$country=="San Marino"
compositeShape$Area[compositeShape$name=="San Marino"]=9;
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_continuous(
name = "Composite",
breaks = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
limits = c(0, 9),  # Limite de l'échelle de couleurs de 0 à 9
labels = seq(0, 9, by = 1),  # Étiquettes de 0 à 9
low = 0,
high = 9,
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Afficher le graphique
print(compositePlotInterv)
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
labels = seq(0, 9, by = 1),
low = 0,
high = 9
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Afficher le graphique
print(compositePlotInterv)
myPalette <- colorRampPalette(brewer.pal(100, "Purples"))
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
labels = seq(0, 9, by = 1),
low = 0,
high = 9
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Afficher le graphique
print(compositePlotInterv)
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Afficher le graphique
print(compositePlotInterv)
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_viridis_d(labels = breaks) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Créer le graphique ggplot avec les bonnes échelles
compositePlotInterv <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_viridis_d(breaks = seq(0, 9, by = 1)) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
) +
# Afficher le graphique
print(compositePlotInterv)
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)+scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
)
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
)+
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)+
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
)
#Setting all the polygons to the NULL value
compositeShape <-
borders
compositeShape$Area <-
rep(NA, length(compositeShape$iso3))
#Setting the polygons summary indices
for (i in 1:length(polygonsWithInformation)) {
compositeShape$Area[compositeShape$name == polygonsWithInformation[i]] <-
compositeRisk[i]
}
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)+
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0,9)
)
myPalette <- colorRampPalette(brewer.pal(9, "Purples"))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = myPalette(100)  # Utilisez la palette avec 100 couleurs
)+
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0,9)
)
myPalette()
myPalette
palette1<- colorRampPalette(brewer.pal(9, "Purples"))
palette1
custom_palette <- colorRampPalette(c("white", brewer.pal(num_colors, "Purples")[2:num_colors]))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100)  # Utilisez la palette avec 100 couleurs
)+
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0,9)
)
custom_palette <- colorRampPalette(c("white", brewer.pal(num_colors, "Purples")[2:num_colors]))
custom_palette <- colorRampPalette(c("white", brewer.pal(num_colors, "Purples")[2:9]))
custom_palette <- colorRampPalette(c("white", brewer.pal(9, "Purples")[2:9]))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100)  # Utilisez la palette avec 100 couleurs
)+
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0,9)
)
custom_palette <- colorRampPalette(c("white", brewer.pal(8, "Purples")[2:9]))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100)  # Utilisez la palette avec 100 couleurs
)+
scale_fill_steps(
name = "Composite",
breaks = seq(0, 9, by = 1),
limits = c(0,9)
)
custom_palette <- colorRampPalette(c("white", brewer.pal(8, "Purples")[2:9]))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100)  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100),  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite"
)
custom_palette <- colorRampPalette(c("white", brewer.pal(9, "Purples")[2:9]))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100),  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite"
)
custom_palette <- colorRampPalette(brewer.pal(9, "Purples"))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100),  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite"
)
custom_palette <- colorRampPalette(brewer.pal(9, "Purples"))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette(100),  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite"
)
#custom_palette <- colorRampPalette(c("white", brewer.pal(9, "Purples")[2:9]))
custom_palette1 <- colorRampPalette(brewer.pal(9, "Purples"))
# Créer le graphique ggplot avec les bonnes échelles
ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = custom_palette1(100),  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite"
)
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
temp <- plot_grid(compositePlot+ theme(legend.position="none"),
compositePlotInterv+ theme(legend.position="none"),
nrow = 2,
ncol = 1)
temp
legend<- get_legend(
# create some space to the left of the legend
compositePlot + theme(legend.box.margin = margin(0, 0, 0, 12))
)
temp <- plot_grid(compositePlot+ theme(legend.position="none"),
compositePlotInterv+ theme(legend.position="none"),
legend,
nrow = 2,
ncol = 1)
temp
temp <- plot_grid(compositePlot+ theme(legend.position="none"),
compositePlotInterv+ theme(legend.position="none"),
nrow = 2,
ncol = 1)
temp
plot_grid(temp,legend)
plot_grid(temp,legend,rel_widths = c(3, .4))
legend<- get_legend(
# create some space to the left of the legend
compositePlot + theme(legend.box.margin = margin(0, 0, 0, 0))
)
temp <- plot_grid(compositePlot+ theme(legend.position="none"),
compositePlotInterv+ theme(legend.position="none"),
nrow = 2,
ncol = 1)
plot_grid(temp,legend,rel_widths = c(3, .4))
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
#Saving the plot
ggsave(
paste0("./figures/", pathogen[j], "_Interv.pdf"),
mapInterv,
dpi = 150,
units = "in"
)
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/sources/plotMap.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/sources/plotMap.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
wildlifePlot <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = palette1(100),  # Utilisez la palette avec 100 couleurs
values = scales::rescale(c(0, 9)),  # Échelle de 0 à 9
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite"
)
wildlifePlot
ggsave(paste0("./figures/",pathogen[j], "_wildlifePlot",postfix,".pdf"),wildlifePlot, dpi = 150);
liveStockPlot <- ggplot() +
geom_sf(data = livestockCirculationShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = palette1(100),
values = scales::rescale(c(0, 9)),
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Livestock aggregated risk"
)
ggsave(paste0("./figures/",pathogen[j],"_liveStockPlot",postfix,".pdf"),liveStockPlot,, dpi = 150);
liveStockPlot <- ggplot() +
geom_sf(data = livestockCirculationShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = palette2(100),
values = scales::rescale(c(0, 9)),
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Livestock aggregated risk"
)
ggsave(paste0("./figures/",pathogen[j],"_liveStockPlot",postfix,".pdf"),liveStockPlot,, dpi = 150);
compositePlot <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = palette2(100),
values = scales::rescale(c(0, 9)),
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite aggregated risk"
)
ggsave(paste0("./figures/",pathogen[j], "_compositePlot",postfix,".pdf"),compositePlot,dpi = 150, units = "in");
compositePlot <- ggplot() +
geom_sf(data = compositeShape, aes(fill = as.numeric(Area))) +
scale_fill_gradientn(
colours = palette3(100),
values = scales::rescale(c(0, 9)),
breaks = seq(0, 9, by = 1),
limits = c(0, 9),
name = "Composite aggregated risk"
)
ggsave(paste0("./figures/",pathogen[j], "_compositePlot",postfix,".pdf"),compositePlot,dpi = 150, units = "in");
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/sources/plotMap.R")
# Create a composite plot
temp <- plot_grid(wildlifePlot, liveStockPlot, compositePlot,
nrow = 2, ncol = 2, align = "v", hjust = c(0, 0, 5))
temp
plot_grid(wildlifePlot, liveStockPlot, compositePlot,
nrow = 2, ncol = 2, align = "v", hjust = c(0, 0, 0))
plot_grid(wildlifePlot, liveStockPlot, compositePlot,
nrow = 2, ncol = 2, align = "v", hjust = c(0, 0, -10))
plot_grid(wildlifePlot, liveStockPlot, compositePlot,
nrow = 2, ncol = 2, hjust = c(0, 0, -10))
plot_grid(wildlifePlot, liveStockPlot, compositePlot, hjust = c(0, 0, -10))
plot_grid(compositePlot,wildlifePlot, liveStockPlot)
plot_grid(compositePlot,NULL,wildlifePlot, NULL,liveStockPlot,NULL)
plot_grid(compositePlot,wildlifePlot, liveStockPlot,nrow=3,ncol=1)
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/sources/plotMap.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/sources/plotMap.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/dataDescription.R")
data
#preparing the heatmap
rownames(matRes)=pathogen
colnames(matRes)=polygonsWithInformation
pheatmap(matRes)
dev.off();
pdf("./figures/heatMapAnswers.pdf")
pheatmap(matRes)
dev.off();
dev.off();
#Get the number of estimates by pathogen with the inclusion of the data entered by Benjamin on documented absence
opinionData <- read_xlsx("data/dataExpert.xlsx")
print(paste0,"Number of estimates for MERS:",length(opinionData$pathogen[opinionData$pathogen=="MERS"]))
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/dataDescription.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/dataDescription.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
occurenceNb
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/dataDescription.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/analyseExpertData.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
t.test(data2,data3)
t.test(data2,data3)[2]
t.test(data2,data3)[1]
t.test(data2,data3)[3]
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/validationIndicator.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
source("~/Mon Drive/Docs/ResearchWorks/Moi - Indicateur Zoonoses/Analyse/WhoPrezodeIndicator/impactPrevention.R")
